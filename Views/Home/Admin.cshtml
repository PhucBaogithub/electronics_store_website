@{
    ViewData["Title"] = "Admin Panel";
}

<div class="container-fluid py-4">
    <div class="row">
        <!-- Admin Sidebar -->
        <div class="col-lg-3 col-md-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0"><i class="fas fa-cog"></i> Admin Panel</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <a href="#" class="list-group-item list-group-item-action active" onclick="showSection('products')">
                            <i class="fas fa-box"></i> Manage Products
                        </a>
                        <a href="#" class="list-group-item list-group-item-action" onclick="showSection('categories')">
                            <i class="fas fa-tags"></i> Manage Categories
                        </a>
                        <a href="#" class="list-group-item list-group-item-action" onclick="showSection('orders')">
                            <i class="fas fa-shopping-bag"></i> View Orders
                        </a>
                        <a href="#" class="list-group-item list-group-item-action" onclick="showSection('users')">
                            <i class="fas fa-users"></i> Manage Users
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin Content -->
        <div class="col-lg-9 col-md-8">
            <!-- Products Management -->
            <div id="productsSection" class="admin-section">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3><i class="fas fa-box"></i> Product Management</h3>
                    <button class="btn btn-primary" onclick="showAddProductModal()">
                        <i class="fas fa-plus"></i> Add New Product
                    </button>
                </div>

                <!-- Products Search and Filter -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <input type="text" class="form-control" id="productSearchAdmin" placeholder="Search products...">
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="categoryFilterAdmin">
                                    <option value="">All Categories</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="statusFilterAdmin">
                                    <option value="">All Status</option>
                                    <option value="true">Active</option>
                                    <option value="false">Inactive</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Products Table -->
                <div class="card">
                    <div class="card-body">
                        <div id="productsTableLoading" class="text-center py-4">
                            <div class="spinner-border text-primary" role="status"></div>
                            <p class="mt-2">Loading products...</p>
                        </div>
                        <div class="table-responsive" id="productsTableContainer" style="display: none;">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Image</th>
                                        <th>Name</th>
                                        <th>Category</th>
                                        <th>Price</th>
                                        <th>Stock</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="productsTableBody">
                                    <!-- Products will be loaded dynamically -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Categories Management -->
            <div id="categoriesSection" class="admin-section" style="display: none;">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3><i class="fas fa-tags"></i> Category Management</h3>
                    <button class="btn btn-primary" onclick="showAddCategoryModal()">
                        <i class="fas fa-plus"></i> Add New Category
                    </button>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Products Count</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="categoriesTableBody">
                                    <!-- Categories will be loaded dynamically -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Orders Section -->
            <div id="ordersSection" class="admin-section" style="display: none;">
                <h3><i class="fas fa-shopping-bag"></i> Orders Management</h3>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> Orders management feature coming soon!
                </div>
            </div>

            <!-- Users Section -->
            <div id="usersSection" class="admin-section" style="display: none;">
                <h3><i class="fas fa-users"></i> User Management</h3>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> User management feature coming soon!
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Product Modal -->
<div class="modal fade" id="addProductModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addProductForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="productName" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="productName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="productBrand" class="form-label">Brand</label>
                            <input type="text" class="form-control" id="productBrand" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="productModel" class="form-label">Model</label>
                            <input type="text" class="form-control" id="productModel" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="productCategory" class="form-label">Category</label>
                            <select class="form-select" id="productCategory" required>
                                <option value="">Select Category</option>
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="productDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="productDescription" rows="3" required></textarea>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="productPrice" class="form-label">Price</label>
                            <input type="number" class="form-control" id="productPrice" step="0.01" min="0" required>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="productDiscountPrice" class="form-label">Discount Price</label>
                            <input type="number" class="form-control" id="productDiscountPrice" step="0.01" min="0">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="productStock" class="form-label">Stock Quantity</label>
                            <input type="number" class="form-control" id="productStock" min="0" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="productImageUrl" class="form-label">Image URL</label>
                            <input type="url" class="form-control" id="productImageUrl">
                        </div>
                        <div class="col-md-6 mb-3">
                            <div class="d-flex gap-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="productActive" checked>
                                    <label class="form-check-label" for="productActive">Active</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="productFeatured">
                                    <label class="form-check-label" for="productFeatured">Featured</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveProduct()">Save Product</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentSection = 'products';

        document.addEventListener('DOMContentLoaded', function() {
            // Check admin access
            checkAdminAccess();
            loadProducts();
            loadCategories();
            loadCategoriesForSelect();
        });

        function checkAdminAccess() {
            const user = JSON.parse(localStorage.getItem('user') || '{}');
            if (!user.roles || !user.roles.includes('Admin')) {
                showToast('Access denied. Admin privileges required.', 'danger');
                window.location.href = '/';
                return;
            }
        }

        function showSection(section) {
            // Hide all sections
            document.querySelectorAll('.admin-section').forEach(s => s.style.display = 'none');
            document.querySelectorAll('.list-group-item').forEach(item => item.classList.remove('active'));
            
            // Show selected section
            document.getElementById(section + 'Section').style.display = 'block';
            event.target.classList.add('active');
            currentSection = section;

            // Load data for section
            switch(section) {
                case 'products':
                    loadProducts();
                    break;
                case 'categories':
                    loadCategories();
                    break;
            }
        }

        async function loadProducts() {
            try {
                document.getElementById('productsTableLoading').style.display = 'block';
                document.getElementById('productsTableContainer').style.display = 'none';

                const response = await fetch('/api/products?pageSize=100', {
                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('authToken') }
                });

                if (response.ok) {
                    const data = await response.json();
                    displayProducts(data.items || data);
                } else {
                    showToast('Failed to load products', 'danger');
                }
            } catch (error) {
                console.error('Error loading products:', error);
                showToast('Error loading products', 'danger');
            } finally {
                document.getElementById('productsTableLoading').style.display = 'none';
                document.getElementById('productsTableContainer').style.display = 'block';
            }
        }

        function displayProducts(products) {
            const tbody = document.getElementById('productsTableBody');
            tbody.innerHTML = products.map(product => `
                <tr>
                    <td>
                        <img src="${product.imageUrl || '/images/placeholder-product.jpg'}" 
                             alt="${product.name}" style="width: 50px; height: 50px; object-fit: cover;" class="rounded">
                    </td>
                    <td>
                        <div>
                            <strong>${product.name}</strong>
                            <br><small class="text-muted">${product.brand} ${product.model}</small>
                        </div>
                    </td>
                    <td>${product.categoryName}</td>
                    <td>
                        ${product.hasDiscount ? `<span class="text-decoration-line-through">$${product.price}</span><br><strong class="text-danger">$${product.finalPrice}</strong>` : `$${product.price}`}
                    </td>
                    <td>
                        <span class="badge ${product.stockQuantity > 0 ? 'bg-success' : 'bg-danger'}">
                            ${product.stockQuantity}
                        </span>
                    </td>
                    <td>
                        <span class="badge ${product.isActive ? 'bg-success' : 'bg-secondary'}">
                            ${product.isActive ? 'Active' : 'Inactive'}
                        </span>
                        ${product.isFeatured ? '<br><span class="badge bg-warning text-dark">Featured</span>' : ''}
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-primary" onclick="editProduct(${product.id})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-outline-danger" onclick="deleteProduct(${product.id})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        async function loadCategories() {
            try {
                const response = await fetch('/api/categories');
                if (response.ok) {
                    const categories = await response.json();
                    displayCategories(categories);
                }
            } catch (error) {
                console.error('Error loading categories:', error);
            }
        }

        function displayCategories(categories) {
            const tbody = document.getElementById('categoriesTableBody');
            tbody.innerHTML = categories.map(category => `
                <tr>
                    <td><strong>${category.name}</strong></td>
                    <td>${category.description}</td>
                    <td><span class="badge bg-info">${category.productCount || 0}</span></td>
                    <td>
                        <span class="badge ${category.isActive ? 'bg-success' : 'bg-secondary'}">
                            ${category.isActive ? 'Active' : 'Inactive'}
                        </span>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-primary" onclick="editCategory(${category.id})">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-outline-danger" onclick="deleteCategory(${category.id})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        async function loadCategoriesForSelect() {
            try {
                const response = await fetch('/api/categories');
                if (response.ok) {
                    const categories = await response.json();
                    const select = document.getElementById('productCategory');
                    select.innerHTML = '<option value="">Select Category</option>' + 
                        categories.map(cat => `<option value="${cat.id}">${cat.name}</option>`).join('');
                }
            } catch (error) {
                console.error('Error loading categories:', error);
            }
        }

        function showAddProductModal() {
            document.getElementById('addProductForm').reset();
            const modal = new bootstrap.Modal(document.getElementById('addProductModal'));
            modal.show();
        }

        async function saveProduct() {
            const formData = {
                name: document.getElementById('productName').value,
                brand: document.getElementById('productBrand').value,
                model: document.getElementById('productModel').value,
                categoryId: parseInt(document.getElementById('productCategory').value),
                description: document.getElementById('productDescription').value,
                price: parseFloat(document.getElementById('productPrice').value),
                discountPrice: document.getElementById('productDiscountPrice').value ? parseFloat(document.getElementById('productDiscountPrice').value) : null,
                stockQuantity: parseInt(document.getElementById('productStock').value),
                imageUrl: document.getElementById('productImageUrl').value,
                isActive: document.getElementById('productActive').checked,
                isFeatured: document.getElementById('productFeatured').checked
            };

            try {
                const response = await fetch('/api/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + localStorage.getItem('authToken')
                    },
                    body: JSON.stringify(formData)
                });

                if (response.ok) {
                    showToast('Product added successfully', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('addProductModal')).hide();
                    loadProducts();
                } else {
                    showToast('Failed to add product', 'danger');
                }
            } catch (error) {
                console.error('Error adding product:', error);
                showToast('Error adding product', 'danger');
            }
        }

        function editProduct(id) {
            showToast('Edit product feature coming soon!', 'info');
        }

        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                showToast('Delete product feature coming soon!', 'info');
            }
        }

        function editCategory(id) {
            showToast('Edit category feature coming soon!', 'info');
        }

        function deleteCategory(id) {
            if (confirm('Are you sure you want to delete this category?')) {
                showToast('Delete category feature coming soon!', 'info');
            }
        }

        function showAddCategoryModal() {
            showToast('Add category feature coming soon!', 'info');
        }
    </script>
}